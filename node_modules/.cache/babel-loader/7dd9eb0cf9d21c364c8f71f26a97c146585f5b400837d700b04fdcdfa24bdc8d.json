{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\projects\\\\jWTFcm\\\\clients\\\\pushnotify.api\\\\src\\\\pages\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\";\nimport Navbar from \"../components/Navbar\";\nimport Sidebar from \"../components/Sidebar\";\nimport \"../styles/ResetPassword.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [email, setEmail] = useState(null);\n  const [tokenValid, setTokenValid] = useState(true);\n  useEffect(() => {\n    const token = searchParams.get(\"token\");\n    if (!token) {\n      setResponse(\"Invalid reset token.\");\n      setTokenValid(false);\n      return;\n    }\n    try {\n      const decoded = jwtDecode(token);\n      const expiration = decoded.exp * 1000;\n      const now = Date.now();\n      if (now > expiration) {\n        setResponse(\"Reset token has expired.\");\n        setTokenValid(false);\n      } else {\n        setEmail(decoded.email);\n        setTokenValid(true);\n      }\n    } catch (err) {\n      setResponse(\"Invalid reset token.\");\n      setTokenValid(false);\n    }\n  }, [searchParams]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setResponse(\"\");\n    if (password !== confirmPassword) {\n      setResponse(\"Passwords do not match.\");\n      return;\n    }\n    const BASE_URL = \"https://inlmqkmxchdb5df6t3gjdqzpqi0jrfmc.lambda-url.eu-north-1.on.aws/\";\n    try {\n      const res = await fetch(BASE_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          type: \"reset-password\",\n          token: searchParams.get(\"token\"),\n          email,\n          password\n        })\n      });\n      const response = await res.json();\n      if (response.success) {\n        setResponse(\"Password reset successfully!\");\n        await alert(\"Password reset successfully!\");\n        setTimeout(() => {\n          window.close();\n        }, 2000);\n      } else {\n        setResponse(response.message);\n      }\n    } catch (err) {\n      setResponse(\"Failed to reset password.\" + err);\n    }\n  };\n  const [isSidebarOpen, setSidebarOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h100 flex fdc\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      toggleSidebar: () => setSidebarOpen(!isSidebarOpen)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      isOpen: isSidebarOpen,\n      toggleSidebar: () => setSidebarOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reset-password-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reset-password-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), response && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: response.includes(\"successfully\") ? \"message\" : \"expired-message\",\n          children: response\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"New Password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              required: true,\n              disabled: !tokenValid,\n              className: !tokenValid ? \"disabled\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Confirm Password\",\n              value: confirmPassword,\n              onChange: e => setConfirmPassword(e.target.value),\n              required: true,\n              disabled: !tokenValid,\n              className: !tokenValid ? \"disabled\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: `submit-btn ${!tokenValid ? \"disabled\" : \"\"}`,\n            disabled: !tokenValid,\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPassword, \"G2/Lg4MYuqdG16myeUii3d3apzY=\", false, function () {\n  return [useSearchParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useEffect","useSearchParams","jwtDecode","Navbar","Sidebar","jsxDEV","_jsxDEV","ResetPassword","_s","searchParams","password","setPassword","confirmPassword","setConfirmPassword","response","setResponse","email","setEmail","tokenValid","setTokenValid","token","get","decoded","expiration","exp","now","Date","err","handleSubmit","e","preventDefault","BASE_URL","res","fetch","method","headers","body","JSON","stringify","type","json","success","alert","setTimeout","window","close","message","isSidebarOpen","setSidebarOpen","className","children","toggleSidebar","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","includes","onSubmit","placeholder","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/projects/jWTFcm/clients/pushnotify.api/src/pages/ResetPassword.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\";\n\nimport Navbar from \"../components/Navbar\";\nimport Sidebar from \"../components/Sidebar\";\n\nimport \"../styles/ResetPassword.scss\";\n\nconst ResetPassword = () => {\n    const [searchParams] = useSearchParams();\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [response, setResponse] = useState(\"\");\n    const [email, setEmail] = useState(null);\n    const [tokenValid, setTokenValid] = useState(true);\n\n    useEffect(() => {\n        const token = searchParams.get(\"token\");\n\n        if (!token) {\n            setResponse(\"Invalid reset token.\");\n            setTokenValid(false);\n            return;\n        }\n\n        try {\n            const decoded = jwtDecode(token);\n            const expiration = decoded.exp * 1000;\n            const now = Date.now();\n\n            if (now > expiration) {\n                setResponse(\"Reset token has expired.\");\n                setTokenValid(false);\n            } else {\n                setEmail(decoded.email);\n                setTokenValid(true);\n            }\n        } catch (err) {\n            setResponse(\"Invalid reset token.\");\n            setTokenValid(false);\n        }\n    }, [searchParams]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setResponse(\"\");\n\n        if (password !== confirmPassword) {\n            setResponse(\"Passwords do not match.\");\n            return;\n        }\n        \n        const BASE_URL = \"https://inlmqkmxchdb5df6t3gjdqzpqi0jrfmc.lambda-url.eu-north-1.on.aws/\";\n\n        try {\n            const res = await fetch(BASE_URL, {\n                method:\"POST\",\n                headers:{\n                    \"Content-Type\": \"application/json\",\n                },\n                body:JSON.stringify({\n                    type: \"reset-password\",\n                    token: searchParams.get(\"token\"),                \n                    email,\n                    password,\n                })              \n            });   \n            \n            const response = await res.json();            \n                                                             \n            if (response.success) {\n                setResponse(\"Password reset successfully!\")\n                await alert(\"Password reset successfully!\");               \n                setTimeout(()=>{\n                    window.close();\n                },2000)\n            } else {\n                setResponse(response.message);\n            }\n        } catch (err) {\n            setResponse(\"Failed to reset password.\"+err);\n        }\n    };\n    \n    const [isSidebarOpen, setSidebarOpen] = useState(false);\n\n    return (\n        <div className=\"h100 flex fdc\">\n         <Navbar toggleSidebar={() => setSidebarOpen(!isSidebarOpen)} />\n         <Sidebar isOpen={isSidebarOpen} toggleSidebar={() => setSidebarOpen(false)} />\n          \n        <div className=\"reset-password-container\">\n            <div className=\"reset-password-box\">\n                <h2>Reset Password</h2>\n\n                {response && <p className={ response.includes(\"successfully\") ? \"message\" : \"expired-message\" }>{response}</p>}\n\n                <form onSubmit={handleSubmit}>\n                    <div className=\"input-group\">\n                        <input\n                            type=\"password\"\n                            placeholder=\"New Password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            required\n                            disabled={!tokenValid}\n                            className={!tokenValid ? \"disabled\" : \"\"}\n                        />\n                    </div>\n\n                    <div className=\"input-group\">\n                        <input\n                            type=\"password\"\n                            placeholder=\"Confirm Password\"\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                            required\n                            disabled={!tokenValid}\n                            className={!tokenValid ? \"disabled\" : \"\"}\n                        />\n                    </div>                                        \n\n                    <button type=\"submit\" className={`submit-btn ${!tokenValid ? \"disabled\" : \"\"}`} disabled={!tokenValid}>\n                        Reset Password\n                    </button>\n                </form>\n            </div>\n        </div>\n        </div>\n    );\n};\n\nexport default ResetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}