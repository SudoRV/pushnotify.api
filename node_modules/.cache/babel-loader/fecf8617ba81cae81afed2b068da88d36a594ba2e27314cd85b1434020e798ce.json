{"ast":null,"code":"import secret from \"../files/default_secret_key.json\";\nconst replacePlaceholders = rawText => {\n  let updatedText = rawText;\n\n  // Retrieve stored test token from local storage\n  let t_data = localStorage.getItem(\"t_data\");\n  let testToken = JSON.parse(t_data || \"{}\")[\"test-token\"];\n\n  // Replace \"access-token\" if testToken is available\n  if (testToken) {\n    updatedText = updatedText.replace(/\"access-token\\s*\"\\s*:\\s*\"(.*?)\"/, `\"access-token\": \"${testToken}\"`);\n  }\n\n  // Retrieve stored client email from local storage\n  const userData = JSON.parse(localStorage.getItem(\"creds\") || \"{}\");\n  const clientEmail = userData.email || \"your-email@gmail.com\";\n\n  // Replace \"client-email\"\n  updatedText = updatedText.replace(/\"client-email\\s*\"\\s*:\\s*\"(.*?)\"/, `\"client-email\": \"${clientEmail}\"`);\n\n  // Replace \"private-key\" with secret key from JSON file\n  updatedText = updatedText.replace(/\"private-key\\s*\"\\s*:\\s*\"(.*?)\"/, `\"private-key\": \"${secret[\"secret-key\"].replaceAll(\"\\n\", \"\\\\n\")}\"`);\n  return updatedText.replaceAll(\"\\n\", \" \");\n};\nexport default replacePlaceholders;","map":{"version":3,"names":["secret","replacePlaceholders","rawText","updatedText","t_data","localStorage","getItem","testToken","JSON","parse","replace","userData","clientEmail","email","replaceAll"],"sources":["/data/data/com.termux/files/home/jWTFcm/clients/pushnotify.api/src/functions/replacePlaceholders.js"],"sourcesContent":["import secret from \"../files/default_secret_key.json\";\n\nconst replacePlaceholders = (rawText) => {\n  let updatedText = rawText;\n\n  // Retrieve stored test token from local storage\n  let t_data = localStorage.getItem(\"t_data\");\n  let testToken = JSON.parse(t_data || \"{}\")[\"test-token\"];\n\n  // Replace \"access-token\" if testToken is available\n  if (testToken) {\n    updatedText = updatedText.replace(/\"access-token\\s*\"\\s*:\\s*\"(.*?)\"/, `\"access-token\": \"${testToken}\"`);\n  }\n\n  // Retrieve stored client email from local storage\n  const userData = JSON.parse(localStorage.getItem(\"creds\") || \"{}\");\n  const clientEmail = userData.email || \"your-email@gmail.com\";\n\n  // Replace \"client-email\"\n  updatedText = updatedText.replace(/\"client-email\\s*\"\\s*:\\s*\"(.*?)\"/, `\"client-email\": \"${clientEmail}\"`);\n\n  // Replace \"private-key\" with secret key from JSON file\n  updatedText = updatedText.replace(/\"private-key\\s*\"\\s*:\\s*\"(.*?)\"/, `\"private-key\": \"${secret[\"secret-key\"].replaceAll(\"\\n\", \"\\\\n\")}\"`);\n\n  return updatedText.replaceAll(\"\\n\", \" \");\n};\n\nexport default replacePlaceholders;\n\n\n\n\n\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,kCAAkC;AAErD,MAAMC,mBAAmB,GAAIC,OAAO,IAAK;EACvC,IAAIC,WAAW,GAAGD,OAAO;;EAEzB;EACA,IAAIE,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAC3C,IAAIC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACL,MAAM,IAAI,IAAI,CAAC,CAAC,YAAY,CAAC;;EAExD;EACA,IAAIG,SAAS,EAAE;IACbJ,WAAW,GAAGA,WAAW,CAACO,OAAO,CAAC,iCAAiC,EAAE,oBAAoBH,SAAS,GAAG,CAAC;EACxG;;EAEA;EACA,MAAMI,QAAQ,GAAGH,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;EAClE,MAAMM,WAAW,GAAGD,QAAQ,CAACE,KAAK,IAAI,sBAAsB;;EAE5D;EACAV,WAAW,GAAGA,WAAW,CAACO,OAAO,CAAC,iCAAiC,EAAE,oBAAoBE,WAAW,GAAG,CAAC;;EAExG;EACAT,WAAW,GAAGA,WAAW,CAACO,OAAO,CAAC,gCAAgC,EAAE,mBAAmBV,MAAM,CAAC,YAAY,CAAC,CAACc,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC;EAEvI,OAAOX,WAAW,CAACW,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC;AAC1C,CAAC;AAED,eAAeb,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}