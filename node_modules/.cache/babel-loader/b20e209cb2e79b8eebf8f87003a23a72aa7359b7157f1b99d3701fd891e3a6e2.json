{"ast":null,"code":"import { messaging, getToken } from \"../files/firebase\";\n\n// ðŸ”¹ Register Service Worker\nasync function registerServiceWorker() {\n  if (!(\"serviceWorker\" in navigator)) {\n    console.warn(\"Service Workers Not Supported.\");\n    return null;\n  }\n  try {\n    const registration = await navigator.serviceWorker.register(\"/firebase-messaging-sw.js\");\n    console.log(\"Service Worker Registered.\");\n    return registration;\n  } catch (error) {\n    console.error(\"Service Worker Registration Failed: \", error.message);\n    return null;\n  }\n}\nasync function requestNotificationPermission() {\n  // Request Notification Permission\n  const permission = await Notification.requestPermission();\n  if (permission !== \"granted\") {\n    console.log(\"Notification permission denied.\");\n    return false;\n  } else {\n    return true;\n  }\n}\nasync function getDeviceToken() {\n  await registerServiceWorker();\n  try {\n    const token = await getToken(messaging, {\n      vapidKey: \"BEYLH-zHd4f9kw2lZMTI5cilEv21mfNJbIZS1hlnYLcCJUI7x1RlN6cqatwX2MCx_NJF4NzC7lHPFKAT2EQHnRE\"\n    });\n    if (!token) {\n      console.log(\"No registration token available.\");\n      return null;\n    }\n    return token;\n  } catch (error) {\n    if (error.toString().includes(\"permission-blocked\")) {\n      return \"Notification Permission Blocked! Enable Through Site Setting\";\n    }\n  }\n}\nexport { registerServiceWorker, requestNotificationPermission, getDeviceToken };","map":{"version":3,"names":["messaging","getToken","registerServiceWorker","navigator","console","warn","registration","serviceWorker","register","log","error","message","requestNotificationPermission","permission","Notification","requestPermission","getDeviceToken","token","vapidKey","toString","includes"],"sources":["/data/data/com.termux/files/home/jWTFcm/clients/pushnotify.api/src/functions/getDeviceToken.js"],"sourcesContent":["import {\n  messaging,\n  getToken,\n} from \"../files/firebase\";\n\n// ðŸ”¹ Register Service Worker\nasync function registerServiceWorker() {\n  if (!(\"serviceWorker\" in navigator)) {\n    console.warn(\"Service Workers Not Supported.\");\n    return null;\n  }\n\n  try {\n    const registration = await navigator.serviceWorker.register(\"/firebase-messaging-sw.js\");\n    console.log(\"Service Worker Registered.\");\n    return registration;\n  } catch (error) {\n    console.error(\"Service Worker Registration Failed: \", error.message);\n    return null;\n  }\n}\n\nasync function requestNotificationPermission() {\n  // Request Notification Permission\n  const permission = await Notification.requestPermission();\n  if (permission !== \"granted\") {\n    console.log(\"Notification permission denied.\");\n    return false;\n  } else {\n    return true;\n  }\n}\n\nasync function getDeviceToken() {\n  await registerServiceWorker();\n\n  try {\n    const token = await getToken(messaging, {\n      vapidKey: \"BEYLH-zHd4f9kw2lZMTI5cilEv21mfNJbIZS1hlnYLcCJUI7x1RlN6cqatwX2MCx_NJF4NzC7lHPFKAT2EQHnRE\"\n    });\n\n    if (!token) {\n      console.log(\"No registration token available.\");\n      return null;\n    }\n\n    return token;\n  } catch (error) {\n    if (error.toString().includes(\"permission-blocked\")) {\n      return \"Notification Permission Blocked! Enable Through Site Setting\"\n    }\n  }\n}\n\n\nexport { registerServiceWorker, requestNotificationPermission, getDeviceToken };"],"mappings":"AAAA,SACEA,SAAS,EACTC,QAAQ,QACH,mBAAmB;;AAE1B;AACA,eAAeC,qBAAqBA,CAAA,EAAG;EACrC,IAAI,EAAE,eAAe,IAAIC,SAAS,CAAC,EAAE;IACnCC,OAAO,CAACC,IAAI,CAAC,gCAAgC,CAAC;IAC9C,OAAO,IAAI;EACb;EAEA,IAAI;IACF,MAAMC,YAAY,GAAG,MAAMH,SAAS,CAACI,aAAa,CAACC,QAAQ,CAAC,2BAA2B,CAAC;IACxFJ,OAAO,CAACK,GAAG,CAAC,4BAA4B,CAAC;IACzC,OAAOH,YAAY;EACrB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAACC,OAAO,CAAC;IACpE,OAAO,IAAI;EACb;AACF;AAEA,eAAeC,6BAA6BA,CAAA,EAAG;EAC7C;EACA,MAAMC,UAAU,GAAG,MAAMC,YAAY,CAACC,iBAAiB,CAAC,CAAC;EACzD,IAAIF,UAAU,KAAK,SAAS,EAAE;IAC5BT,OAAO,CAACK,GAAG,CAAC,iCAAiC,CAAC;IAC9C,OAAO,KAAK;EACd,CAAC,MAAM;IACL,OAAO,IAAI;EACb;AACF;AAEA,eAAeO,cAAcA,CAAA,EAAG;EAC9B,MAAMd,qBAAqB,CAAC,CAAC;EAE7B,IAAI;IACF,MAAMe,KAAK,GAAG,MAAMhB,QAAQ,CAACD,SAAS,EAAE;MACtCkB,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEF,IAAI,CAACD,KAAK,EAAE;MACVb,OAAO,CAACK,GAAG,CAAC,kCAAkC,CAAC;MAC/C,OAAO,IAAI;IACb;IAEA,OAAOQ,KAAK;EACd,CAAC,CAAC,OAAOP,KAAK,EAAE;IACd,IAAIA,KAAK,CAACS,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,oBAAoB,CAAC,EAAE;MACnD,OAAO,8DAA8D;IACvE;EACF;AACF;AAGA,SAASlB,qBAAqB,EAAEU,6BAA6B,EAAEI,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}