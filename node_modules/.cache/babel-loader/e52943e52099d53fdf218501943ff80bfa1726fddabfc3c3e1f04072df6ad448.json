{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/jWTFcm/clients/pushnotify.api/src/components/PasswordResetPopup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { showNotification } from \"../components/ShowNotification\";\nimport \"../styles/PasswordResetPopup.scss\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PasswordResetPopup = ({\n  closePopup\n}) => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [otpSent, setOtpSent] = useState(false);\n  const [otp, setOtp] = useState(\"\");\n  const [resendTimer, setResendTimer] = useState(0);\n  const [otpValidity, setOtpValidity] = useState(0);\n  const BASE_URL = \"https://inlmqkmxchdb5df6t3gjdqzpqi0jrfmc.lambda-url.eu-north-1.on.aws/\";\n\n  // Countdown timer effects\n  useEffect(() => {\n    let resendInterval;\n    if (resendTimer > 0) {\n      resendInterval = setInterval(() => {\n        setResendTimer(prev => prev - 1);\n      }, 1000);\n    }\n    return () => clearInterval(resendInterval);\n  }, [resendTimer]);\n  useEffect(() => {\n    let otpInterval;\n    if (otpValidity > 0) {\n      otpInterval = setInterval(() => {\n        setOtpValidity(prev => prev - 1);\n      }, 1000);\n    }\n    return () => clearInterval(otpInterval);\n  }, [otpValidity]);\n  const handleGenerateOtp = async (e, isResend = false) => {\n    var _e$preventDefault;\n    e === null || e === void 0 ? void 0 : (_e$preventDefault = e.preventDefault) === null || _e$preventDefault === void 0 ? void 0 : _e$preventDefault.call(e);\n    if (!email || email.trim() !== JSON.parse(localStorage.getItem(\"creds\")).email) return alert(\"Please enter your email.\");\n    try {\n      const res = await fetch(BASE_URL + `?req=reset-password-link&action=otp&email=${email}`);\n      const response = await res.json();\n      console.log(response);\n      if (response.type === \"success\") {\n        showNotification(\"OTP sent to \" + email);\n        setOtpSent(true);\n        setResendTimer(60); // 60 sec disable resend\n        setOtpValidity(900); // 5 mins = 300 sec OTP validity\n        setOtp(\"\"); // Clear OTP field\n      } else {\n        showNotification(response.message || \"Failed to send OTP\", true);\n      }\n    } catch (err) {\n      console.error(err);\n      showNotification(\"Something went wrong.\", true);\n    }\n  };\n  const handleVerifyOtp = async e => {\n    e.preventDefault();\n    if (!otp) return alert(\"Please enter the OTP.\");\n    try {\n      const res = await fetch(BASE_URL + `?req=reset-password-link&action=verify-otp&email=${email}&otp=${otp}`);\n      const response = await res.json();\n      if (response.type === \"success\") {\n        showNotification(\"OTP Verified. Reset link sent to email.\");\n        const timeout = setTimeout(() => {\n          closePopup();\n          clearTimeout(timeout);\n        }, 3000);\n        // Optional: Redirect to reset page\n      } else {\n        showNotification(response.message || \"Invalid OTP\", true);\n      }\n    } catch (err) {\n      console.error(err);\n      showNotification(\"Something went wrong.\", true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"password-reset-popup popup-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDD12 Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter your email to receive an OTP.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: otpSent ? handleVerifyOtp : handleGenerateOtp,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Enter your email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true,\n          disabled: otpSent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), otpSent && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter OTP\",\n            value: otp,\n            onChange: e => setOtp(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex jcsb aic\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: \"14px\",\n                color: \"#555\"\n              },\n              children: [\"OTP valid for: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [otpValidity, \"s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                \"marginLeft\": \"auto\"\n              },\n              type: \"button\",\n              onClick: e => handleGenerateOtp(e, true),\n              disabled: resendTimer > 0,\n              className: \"resend-btn\",\n              children: resendTimer > 0 ? `Resend OTP in ${resendTimer}s` : \"Resend OTP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          children: otpSent ? \"Verify OTP\" : \"Generate OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"close-btn\",\n          onClick: closePopup,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordResetPopup, \"dRsOUrK5ghY9Vtp1kT8MpfusV3Y=\");\n_c = PasswordResetPopup;\nexport default PasswordResetPopup;\nvar _c;\n$RefreshReg$(_c, \"PasswordResetPopup\");","map":{"version":3,"names":["React","useState","useEffect","showNotification","jsxDEV","_jsxDEV","Fragment","_Fragment","PasswordResetPopup","closePopup","_s","email","setEmail","otpSent","setOtpSent","otp","setOtp","resendTimer","setResendTimer","otpValidity","setOtpValidity","BASE_URL","resendInterval","setInterval","prev","clearInterval","otpInterval","handleGenerateOtp","e","isResend","_e$preventDefault","preventDefault","call","trim","JSON","parse","localStorage","getItem","alert","res","fetch","response","json","console","log","type","message","err","error","handleVerifyOtp","timeout","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","required","disabled","style","fontSize","color","onClick","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/jWTFcm/clients/pushnotify.api/src/components/PasswordResetPopup.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { showNotification } from \"../components/ShowNotification\";\nimport \"../styles/PasswordResetPopup.scss\";\n\nconst PasswordResetPopup = ({ closePopup }) => {\n  const [email, setEmail] = useState(\"\");\n  const [otpSent, setOtpSent] = useState(false);\n  const [otp, setOtp] = useState(\"\");\n  const [resendTimer, setResendTimer] = useState(0);\n  const [otpValidity, setOtpValidity] = useState(0);\n\n  const BASE_URL = \"https://inlmqkmxchdb5df6t3gjdqzpqi0jrfmc.lambda-url.eu-north-1.on.aws/\";\n\n  // Countdown timer effects\n  useEffect(() => {\n    let resendInterval;\n    if (resendTimer > 0) {\n      resendInterval = setInterval(() => {\n        setResendTimer(prev => prev - 1);\n      }, 1000);\n    }\n    return () => clearInterval(resendInterval);\n  }, [resendTimer]);\n\n  useEffect(() => {\n    let otpInterval;\n    if (otpValidity > 0) {\n      otpInterval = setInterval(() => {\n        setOtpValidity(prev => prev - 1);\n      }, 1000);\n    }\n    return () => clearInterval(otpInterval);\n  }, [otpValidity]);\n\n  const handleGenerateOtp = async (e, isResend = false) => {\n    e?.preventDefault?.();\n    if (!email || email.trim() !== JSON.parse(localStorage.getItem(\"creds\")).email) return alert(\"Please enter your email.\");\n\n    try {\n      const res = await fetch(BASE_URL + `?req=reset-password-link&action=otp&email=${email}`);\n      const response = await res.json();\n      console.log(response);\n\n      if (response.type === \"success\") {\n        showNotification(\"OTP sent to \" + email);\n        setOtpSent(true);\n        setResendTimer(60);          // 60 sec disable resend\n        setOtpValidity(900);         // 5 mins = 300 sec OTP validity\n        setOtp(\"\");                  // Clear OTP field\n      } else {\n        showNotification(response.message || \"Failed to send OTP\", true);\n      }\n    } catch (err) {\n      console.error(err);\n      showNotification(\"Something went wrong.\", true);\n    }\n  };\n\n  const handleVerifyOtp = async (e) => {\n    e.preventDefault();\n    if (!otp) return alert(\"Please enter the OTP.\");\n\n    try {\n      const res = await fetch(BASE_URL + `?req=reset-password-link&action=verify-otp&email=${email}&otp=${otp}`);\n      const response = await res.json();\n\n      if (response.type === \"success\") {\n        showNotification(\"OTP Verified. Reset link sent to email.\");\n        const timeout = setTimeout(()=>{\n            closePopup();\n            clearTimeout(timeout);\n        },3000);\n        // Optional: Redirect to reset page\n      } else {\n        showNotification(response.message || \"Invalid OTP\", true);\n      }\n    } catch (err) {\n      console.error(err);\n      showNotification(\"Something went wrong.\", true);\n    }\n  };\n\n  return (\n    <div className=\"password-reset-popup popup-overlay\">\n      <div className=\"popup-box\">\n        <h2>🔒 Reset Password</h2>\n        <p>Enter your email to receive an OTP.</p>\n\n        <form onSubmit={otpSent ? handleVerifyOtp : handleGenerateOtp}>\n          <input \n            type=\"email\" \n            placeholder=\"Enter your email\" \n            value={email} \n            onChange={(e) => setEmail(e.target.value)} \n            required \n            disabled={otpSent}\n          />\n\n          {otpSent && (\n            <>\n              <input \n                type=\"text\" \n                placeholder=\"Enter OTP\" \n                value={otp} \n                onChange={(e) => setOtp(e.target.value)} \n                required \n              />\n              \n              <div className=\"flex jcsb aic\">\n                <p style={{ fontSize: \"14px\", color: \"#555\" }}>\n                OTP valid for: <strong>{otpValidity}s</strong>\n                </p>\n              \n                <button style={{ \"marginLeft\":\"auto\" }}\n                type=\"button\" \n                onClick={(e) => handleGenerateOtp(e, true)} \n                disabled={resendTimer > 0}\n                className=\"resend-btn\"\n              >\n                {resendTimer > 0 ? `Resend OTP in ${resendTimer}s` : \"Resend OTP\"}\n                </button>\n              </div>\n              \n            </>\n          )}\n\n          <button type=\"submit\" className=\"submit-btn\">\n            {otpSent ? \"Verify OTP\" : \"Generate OTP\"}\n          </button>\n\n          <button type=\"button\" className=\"close-btn\" onClick={closePopup}>\n            Cancel\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default PasswordResetPopup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}